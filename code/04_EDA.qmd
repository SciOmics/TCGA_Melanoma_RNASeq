---
title: "Exploratory Data Analysis"
format: html
---

```{r}

#| output: FALSE

library(dplyr)
library(mixOmics)
library(wesanderson)
library(ggsurvfit)
library(ggpubr)

```

# Load Data
```{r}

#normalized expression data
source("functions/Load_Normalized_Expression.R")
normalized_data = load_normalized_expression("../outputs/normalized_expression.csv")
rm(load_normalized_expression)

#sample metadata
source("functions/Load_Sample_Metadata.R")
sample_metadata = load_sample_metadata("../data/sample_metadata.csv")
rm(load_sample_metadata)

```


# Color palette
```{r}

palette_discrete = wes_palette("Darjeeling1", 5, type = "discrete")
wes_palette("Darjeeling1", 5, type = "discrete")

palette_continuous = wes_palette("Zissou1", 100, type = "continuous")
wes_palette("Zissou1", 100, type = "continuous")

```


# PCA
```{r}

pca_results = prcomp(normalized_data)

rownames(sample_metadata) = sample_metadata$sample_id

pca_results$x = merge(pca_results$x, sample_metadata, by = "row.names")

```

## Plots
```{r}

#sample labels
plot1 = ggplot(as.data.frame(pca_results$x), aes(x = PC1, y = PC2, label = sample_id)) +
    geom_point() +
    geom_label(size = 3) +
    scale_color_manual(values = palette_discrete[c(5,1)]) +
    theme_classic()

#Plot colored by primary/met
plot2 = ggplot(as.data.frame(pca_results$x), aes(x = PC1, y = PC2, color = tumor_descriptor)) +
    geom_point(size = 4) +
    scale_color_manual(values = palette_discrete[c(5,1)]) +
    theme_classic()

#Plot colored by tissue
plot3 = ggplot(as.data.frame(pca_results$x), aes(x = PC1, y = PC2, color = tissue_rollup, shape = tumor_descriptor)) +
    geom_point(size = 4) +
    scale_color_manual(values = palette_discrete) +
    theme_classic()

#Plot colored by stage
plot4 = ggplot(as.data.frame(pca_results$x), aes(x = PC1, y = PC2, color = ajcc_pathologic_stage, shape = tumor_descriptor)) +
    geom_point(size = 4) +
    scale_color_manual(values = wes_palette("Zissou1", 13, type = "continuous")) +
    theme_classic()

png(file = "../outputs/plots/pca_plots.png", height = 850, width = 1000, res = 80)
ggarrange(plot1, plot2, plot3, plot4, 
          labels = c("A", "B", "C", "D"),
          nrow = 2,
          ncol = 2)
dev.off()

#clean up 
rm(list = c("plot1", "plot2", "plot3", "plot4"))

```


## Filtered to cutanous
```{r}

#PC1 vs PC2
plot1 = as.data.frame(pca_results$x) |> 
    dplyr::filter(tissue_rollup == "Cutaneous") |> 
    ggplot(aes(x = PC1, y = PC2, color = tumor_descriptor)) +
        geom_point(size = 4) +
        scale_color_manual(values = palette_discrete[c(5,1)]) +
        theme_classic()

#PC2 vs PC3
plot2 = as.data.frame(pca_results$x) |> 
    dplyr::filter(tissue_rollup == "Cutaneous") |> 
    ggplot(aes(x = PC2, y = PC3, color = tumor_descriptor)) +
        geom_point(size = 4) +
        scale_color_manual(values = palette_discrete[c(5,1)]) +
        theme_classic()

png(file = "../outputs/plots/pca_plot_cutaneous.png", height = 500, width = 1000, res = 80)
ggarrange(plot1, plot2, 
          labels = c("A", "B"),
          ncol = 2)
dev.off()

#clean up 
rm(list = c("plot1", "plot2"))


```

# Survival 

## Disease stage
```{r}

#Simplify staging
sample_metadata = sample_metadata |> 
    mutate(stage = as.factor(case_when(
        ajcc_pathologic_stage == "Stage 0" ~ "0",
        ajcc_pathologic_stage == "Stage I" ~ "1",
        ajcc_pathologic_stage == "Stage IA" ~ "1",
        ajcc_pathologic_stage == "Stage IB" ~ "1",
        ajcc_pathologic_stage == "Stage II" ~ "2",
        ajcc_pathologic_stage == "Stage IIA" ~ "2",
        ajcc_pathologic_stage == "Stage IIB" ~ "2",
        ajcc_pathologic_stage == "Stage IIC" ~ "2",
        ajcc_pathologic_stage == "Stage III" ~ "3",
        ajcc_pathologic_stage == "Stage IIIA" ~ "3",
        ajcc_pathologic_stage == "Stage IIIB" ~ "3",
        ajcc_pathologic_stage == "Stage IIIC" ~ "3",
        ajcc_pathologic_stage == "Stage IV" ~ "4"
    )))

#Survival plot
png(filename = "../outputs/plots/survival_plot_stage.png", height = 600, width = 800, res = 200)
sample_metadata |> 
    dplyr::filter(stage != "0") |> 
    survfit2(Surv(last_event, survial_censor) ~ stage , data = _) |>
    ggsurvfit() +
    #add_risktable(risktable_stats = "n.risk") +
    add_pvalue() +
    ggtitle(label = "Overall Survival by Disease Stage") +
    xlab ("Days") +
    scale_color_manual(values = palette_discrete[c(5,2,3,1)])
dev.off()

```


## Age 
```{r}

#Cox regression results treating age as continuous
cox_results = coxph(Surv(last_event, survial_censor) ~ age_at_index , data = sample_metadata) |> 
    summary()

#continuous scale plot
p1 = ggplot(sample_metadata, aes(x = age_at_index, y = last_event, color = as.factor(survial_censor))) +
    geom_point() +
    scale_color_manual(values = c("black", "grey")) +
    labs(x = "Patient Age", y = "Last Event", color = "Status at last event:\n0) Alive\n1) Death", title = "Overall Survival by Patient Age") +
    annotate("text", x = 80, y = 9000, label = paste0("HR: ", round(cox_results$coefficients[2], 4), "\np-value: ", round(cox_results$coefficients[5], 5) ))

#Age bracketing
sample_metadata = sample_metadata |> 
    mutate(age_bracket = as.factor(case_when(
        age_at_index < 30 ~ "0 to 29",
        age_at_index >= 30 &  age_at_index < 40 ~ "30 to 39",
        age_at_index >= 40 &  age_at_index < 50 ~ "40 to 49",
        age_at_index >= 50 &  age_at_index < 60 ~ "50 to 59",
        age_at_index >= 60 &  age_at_index < 70 ~ "60 to 69",
        age_at_index >= 70 &  age_at_index < 80 ~ "70 t0 79",
        age_at_index >= 80  ~ "80+",
        )))

#plot
p2 = sample_metadata |> 
    survfit2(Surv(last_event, survial_censor) ~ age_bracket , data = _) |>
    ggsurvfit() +
    #add_risktable(risktable_stats = "n.risk") +
    #ggtitle(label = "Overall Survival by Patient Age") +
    xlab ("Days")  +
    scale_color_manual(values = palette_continuous[c(1, 16, 32, 48, 64, 80, 96)])

#plot
png(filename = "../outputs/plots/survival_by_age.png", height = 1000, width = 1200, res = 120)
ggarrange(p1, p2,
          nrow = 2)
dev.off()

#clean up
rm(list = c("cox_results", "p1", "p2"))


```


## Sex 
```{r}

png(filename = "../outputs/plots/survival_by_sex.png", height = 600, width = 800, res = 200)
sample_metadata |> 
    survfit2(Surv(last_event, survial_censor) ~ gender , data = _) |>
    ggsurvfit() +
    add_risktable(risktable_stats = "n.risk") +
    add_pvalue() +
    ggtitle(label = "Overall Survival by Patient Sex") +
    xlab ("Days")
dev.off()

```


### Subset samples to more recent samples
```{r}

ggplot(sample_metadata, aes(x = year_of_diagnosis)) +
    geom_histogram(bins = 20, fill = "black") +
    scale_y_continuous(expand = c(0, 0), limits = c(0, NA)) +
    labs(title = "Distribution of years of patient diagnosis", x = "Year of Diagnosis")

#no samples past 2012
sample_metadata |> 
    dplyr::filter(year_of_diagnosis > 2013)

```


## Race
```{r}

#too few samples from non-white
sample_metadata |> 
    survfit2(Surv(last_event, survial_censor) ~ race , data = _) |>
    ggsurvfit() +
    add_risktable(risktable_stats = "n.risk") +
    add_pvalue() +
    ggtitle(label = "Overall Survival by Patient Sex") +
    xlab ("Days")

```

