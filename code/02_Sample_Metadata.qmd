---
title: "Sample Metadata"
format: html
---

```{r}

#| output: FALSE

library(dplyr)
library(stringr)

```


# Load data
```{r}

tcga_data = readRDS("../data/tcga_skcm_data.RDS")

```

# Metadata
```{r}

sample_metadata = as.data.frame(SummarizedExperiment::colData(tcga_data))

#list tissue sites
#unique(sample_metadata$site_of_resection_or_biopsy)

source("functions/Tissue_Rollup.R")

sample_metadata = sample_metadata |> 
    #add generic identifier
    dplyr::mutate(sample_id = paste0("mel", sprintf('%0.3d', 1:length(sample_metadata$patient)))) |> 
    #move sample id to front
    dplyr::select(sample_id, everything()) |> 
    #remove columns
    dplyr::select(!contains("paper_")) |> 
    #turn stage into factor
    dplyr::mutate(ajcc_pathologic_stage = factor(sample_metadata$ajcc_pathologic_stage), .keep = "unused") |> 
    #change tumor_descriptor column to factor
    dplyr::mutate(tumor_descriptor = factor(sample_metadata$tumor_descriptor, levels = c("Primary", "Metastatic"))) |> 
    #remove samples without stage information
    dplyr::filter(ajcc_pathologic_stage != "Not Reported") |> 
    #add tissue rollup
    dplyr::mutate(tissue_rollup = case_when(
        site_of_resection_or_biopsy %in% Tissue_Terms$Cutaneous ~ "Cutaneous",
        site_of_resection_or_biopsy %in% Tissue_Terms$Lymph_Nodes ~ "Lymph_Nodes",
        site_of_resection_or_biopsy %in% Tissue_Terms$CNS ~ "CNS",
        site_of_resection_or_biopsy %in% Tissue_Terms$Mucosal ~ "Mucosal",
        site_of_resection_or_biopsy %in% Tissue_Terms$Organ ~ "Organ",
        site_of_resection_or_biopsy %in% Tissue_Terms$Other ~ "Other"
    )) |> 
    #censor for survival
    dplyr::mutate(survial_censor = as.integer(ifelse(is.na(days_to_death) == TRUE, "0", "1"))) |> 
    #days until last follow up or death
    dplyr::mutate(last_event = ifelse(survial_censor == "1", days_to_death, days_to_last_follow_up)) |> 
    dplyr::mutate(stage = as.integer(case_when(
        ajcc_pathologic_stage == "Stage 0" ~ "0",
        ajcc_pathologic_stage == "Stage I" ~ "1",
        ajcc_pathologic_stage == "Stage IA" ~ "1",
        ajcc_pathologic_stage == "Stage IB" ~ "1",
        ajcc_pathologic_stage == "Stage II" ~ "2",
        ajcc_pathologic_stage == "Stage IIA" ~ "2",
        ajcc_pathologic_stage == "Stage IIB" ~ "2",
        ajcc_pathologic_stage == "Stage IIC" ~ "2",
        ajcc_pathologic_stage == "Stage III" ~ "3",
        ajcc_pathologic_stage == "Stage IIIA" ~ "3",
        ajcc_pathologic_stage == "Stage IIIB" ~ "3",
        ajcc_pathologic_stage == "Stage IIIC" ~ "3",
        ajcc_pathologic_stage == "Stage IV" ~ "4"
    )))

#with(sample_metadata, table(site_of_resection_or_biopsy, tissue_rollup))

#cleanup
rm(Tissue_Terms)

```

# Cleaning up Sample Metadata

## Investigating Columns
```{r}

#Which columns of the sample metadata are lists
str(sample_metadata[2,]) 

list_columns = c("treatments", "primary_site", "disease_type")

unique(sample_metadata[,"primary_site"])
unique(sample_metadata[,"disease_type"])
#primary_site and disease_type have only one value since this is a melanoma data set
#treatment column has generic information not of use

exclude_columns = c("sample_submitter_id", "composition", "state", "pathology_report_uuid", "submitter_id", "oct_embedded",
                    "specimen_type", "is_ffpe", "tissue_type", "synchronous_malignancy", "days_to_diagnosis", "last_known_disease_status",
                    "classification_of_tumor", "diagnosis_id", "icd_10_code", "tumor_grade", "progression_or_recurrence", "alcohol_history",
                    "exposure_id", "demographic_id", "bcr_patient_barcode", "project_id", "name", "releasable", "released")

```

## Remove Columns of no use
```{r}

sample_metadata = sample_metadata |> 
    #remove list columns
    dplyr::select(!list_columns) |> 
    #remove other columns
    dplyr::select(!exclude_columns)

#clean up
rm(list = c("list_columns", "exclude_columns"))

```

## Check samples

### Duplicate samples
```{r}

#check for patients with more than one sample
multiple_samples = data.frame(table(sample_metadata$patient)) |> 
    #arrange(desc(Freq)) |> 
    dplyr::filter(Freq > 1)

multiple_samples

```

#### Info on duplicate samples
```{r}

sample_metadata |> 
    dplyr::filter(patient %in% multiple_samples$Var1) |> 
    dplyr::select(sample_id, patient, tumor_descriptor, tissue_or_organ_of_origin, ajcc_pathologic_stage) |> 
    arrange(patient)

```


### Tissue site vs. Primary/Metastatic
```{r}

sample_metadata |> 
    group_by(tumor_descriptor) |> 
    count(tissue_rollup)

```

### Disease stage vs. Primary/Metastatic
```{r}

sample_metadata |> 
    group_by(tumor_descriptor) |> 
    count(ajcc_pathologic_stage)

```


## Remove incorrectly labeled samples
```{r}

samples_to_omit = sample_metadata |> 
    dplyr::filter(tumor_descriptor == "Primary" & tissue_rollup != "Cutaneous") |> 
    pull(sample_id)

sample_metadata = sample_metadata |> 
    dplyr::filter(sample_id != samples_to_omit)

rm(samples_to_omit)

```


# Save
```{r}

write.csv(sample_metadata, file = "../data/sample_metadata.csv")

```




