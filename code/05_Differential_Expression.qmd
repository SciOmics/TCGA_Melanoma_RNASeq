---
title: "Differential Expression Analysis"
format: html
editor: source
---

```{r}

library(dplyr)
library(EnhancedVolcano)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(limma)
library(ggpubr)

```

# Load Data
```{r}

source("functions/Load_Normalized_Expression.R")
normalized_data = load_normalized_expression("../outputs/normalized_expression.csv")
rm(load_normalized_expression)

```


# Differential Expression
```{r}

diff_exp = makeContrasts(design_vectorMetastatic - design_vectorPrimary, levels = colnames(coef(fit)))
diff_exp = contrasts.fit(fit, diff_exp)
diff_exp = eBayes(diff_exp)

#Make a dataframe of genes with differential expression info
diff_exp_table = topTable(diff_exp, sort.by = "P", n = Inf)

```


## Add gene symbols
```{r}

#Need to remove decimal and trailing numbers from ENSEMBL ids (these are version numbers)
rownames(diff_exp_table) = gsub(pattern = "\\..*",
                                replacement = "",
                                x = rownames(diff_exp_table))

#Add gene symbols
diff_exp_table$gene_symbol = mapIds(org.Hs.eg.db,
                                    keys = rownames(diff_exp_table),
                                    keytype = "ENSEMBL",
                                    column = "SYMBOL")

#Add NCBI gene ids
diff_exp_table$entrez_symbol = mapIds(org.Hs.eg.db,
                                    keys = rownames(diff_exp_table),
                                    keytype = "ENSEMBL",
                                    column = "ENTREZID")

```

## Save
```{r}

write.csv(diff_exp_table, file = "../outputs/differential_expression.csv")

```


# Volcano Plot
```{r}

png(filename = "../outputs/plots/volcano_plot.png", height = 800, width = 800, res = 120)
EnhancedVolcano(diff_exp_table,
                lab = diff_exp_table$gene_symbol,
                x = "logFC",
                y = "adj.P.Val",
                title = "Primary vs. Metastatic Samples")
dev.off()

#Are the values in logFC base 10? 

```


# Individual gene plots

```{r}

normalized_data = normalized_data |> 
  merge(sample_metadata, by.x = "row.names", by.y = "sample_id")

```

```{r}

#KRT6B
p1 = ggplot(normalized_data, aes(x = tumor_descriptor, y = ENSG00000185479, color = tumor_descriptor)) +
  geom_jitter(width = 0.2) +
  stat_summary(fun = "mean", geom = "crossbar", width = 0.3, color = "black") +
  labs(title = "Normalized Expression", x = "", y = "KRT6B") +
  theme(legend.position = "none")

#KRT6B
p2 = ggplot(normalized_data, aes(x = tumor_descriptor, y = ENSG00000112936, color = tumor_descriptor)) +
  geom_jitter(width = 0.2) +
  stat_summary(fun = "mean", geom = "crossbar", width = 0.3, color = "black") +
  labs(x = "", y = "C7") +
  theme(legend.position = "none")

png(filename = "../outputs/plots/gene_expression_plots.png", height = 400, width = 700, res = 120)
ggarrange(p1, p2)
dev.off()

```


#...
#Cutaneous only samples